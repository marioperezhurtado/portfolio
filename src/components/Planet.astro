---
interface Props {
  name: string;
  image: string;
  url: string;
  rotationSpeed: number;
  orbitSpeed: number;
  size: number;
  orbitSize: number;
}

const { image, url, rotationSpeed, orbitSpeed, size, orbitSize } = Astro.props;

const startingOrbit = Math.random() * 360;
---

<div
  id="orbit"
  class="absolute border-2 border-pf-dark-2 rounded-full pointer-events-none"
>
  <a
    href={url}
    target="_blank"
    rel="noopener noreferrer"
    id="planet"
    class="absolute rounded-full pointer-events-auto"
  >
    <img src={image} class="rounded-full" />
  </a>
</div>

<style
  define:vars={{ rotationSpeed, orbitSpeed, size, orbitSize, startingOrbit }}
>
  #planet {
    top: calc((var(--orbitSize) / 3.6 - var(--size)) / 2 * 1px);
    left: calc((var(--orbitSize) / 3.6 - var(--size)) / 2 * 1px);
    width: calc(var(--size) * 1px);
    height: calc(var(--size) * 1px);
    animation: spin calc(var(--rotationSpeed) * 1s) linear infinite;
  }

  #orbit {
    width: calc(var(--orbitSize) * 1px);
    height: calc(var(--orbitSize) * 1px);
    animation: orbit calc(var(--orbitSpeed) * 1s) linear infinite,
      disappear 40s linear forwards;
  }

  @keyframes orbit {
    from {
      transform: rotate(calc(var(--startingOrbit) * 1deg));
    }
    to {
      transform: rotate(calc(var(--startingOrbit) * 1deg + 360deg));
    }
  }

  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }

  @keyframes disappear {
    0% {
      opacity: 1;
    }
    99% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }
</style>
